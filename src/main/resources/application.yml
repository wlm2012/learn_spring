spring:
  profiles:
    active: dev
#  datasource:
#    type: com.alibaba.druid.pool.DruidDataSource
#    druid:
#      #下面为连接池补充设置
#      initialSize: 5
#      # 配置获取连接等待超时的时间
#      maxWait: 60000
#      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#      timeBetweenEvictionRunsMillis: 60000
#      # 配置一个连接在池中最小生存的时间，单位是毫秒
#      minEvictableIdleTimeMillis: 300000
#      validationQuery: SELECT CURRENT SCHEMA FROM SYSIBM.SYSDUMMY1 #SELECT 1 FROM DUAL
#      testWhileIdle: true
#      testOnBorrow: false
#      testOnReturn: false
#      # 打开PSCache，并且指定每个连接上PSCache的大小
#      poolPreparedStatements: true
#      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#      # 合并多个DruidDataSource的监控数据
#      useGlobalDataSourceStat: true
#      web-stat-filter:
#        enabled: true
#        url-pattern: "/*"
#        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
#        # 配置DruidStatViewServlet
#      stat-view-servlet:
#        # 1.1.10版本后需要添加，不然无法打开内置监控
#        enabled: true
#        # 内置监控的页面
#        url-pattern: "/druid/*"
#        # IP白名单(没有配置或者为空，则允许所有访问)
#        allow: 127.0.0.1,192.168.163.1
#        # IP黑名单 (存在共同时，deny优先于allow)
#        deny: 192.168.1.73
#        #  禁用HTML页面上的“Reset All”功能
#        reset-enable: false
#        # 登录名
#        login-username: admin
#        # 登录密码
#        login-password: 123456

mybatis:
  # 配置xml 的扫描路径
  mapper-locations: classpath:mapper/*.xml
  check-config-location: true
  type-aliases-package: com.test.study.mapper


pagehelper:
  autoDialect: true
  closeConn: false
  reasonable: true


#配置log等级
logging:
  level:
    com.example.demo.mapper: debug
  file:
    path: ./log

entity:
  time: 1000

server:
  port: 10808

persCore: 1

cron: 0/10 * * * * ?



#配置actuator，开启所有endpoints
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true




---
#数据库设置
spring:
  profiles: dev
  datasource:
    url: jdbc:db2://172.17.17.16:50000/proddb
    username: qdgjj
    password: qdzfzj


---
#数据库设置
spring:
  profiles: test
  datasource:
    url: jdbc:mysql://localhost:3306/test
    username: root
    password: 123456


---
#数据库设置
spring:
  profiles: prod
